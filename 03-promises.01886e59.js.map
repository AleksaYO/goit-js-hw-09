{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAElCI,EAAQ,EACRC,EAAO,EACPC,EAAS,EASb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAGpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAGpBL,E,IAlBPN,EAAKoB,iBAAiB,UAsBtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAQe,IAC3Bd,EAAcc,EAAGjB,GACdkB,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUgB,EAAKD,EAALN,MACjBQ,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGf,EAAQe,EAARf,SAAUsB,EAAKP,EAALN,MAClBQ,EAAA7B,GAAS8B,OAAOK,QACd,sBAAqCH,OAAfpB,EAAS,QAAYoB,OAANE,EAAM,M,IAGjD1B,GAASC,C,IAnCbP,EAAKoB,iBAAiB,UAAU,WAC9Bd,GAASH,EAAM+B,MACf3B,GAAQH,EAAK8B,MACb1B,GAAUH,EAAO6B,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet DELAY = 0;\nlet STEP = 0;\nlet AMOUNT = 0;\n\nform.addEventListener('submit', startPromise);\nform.addEventListener('change', () => {\n  DELAY = +delay.value;\n  STEP = +step.value;\n  AMOUNT = +amount.value;\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, DELAY);\n  });\n}\n\nfunction startPromise(event) {\n  event.preventDefault();\n  for (let i = 1; i <= AMOUNT; i++) {\n    createPromise(i, DELAY)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    DELAY += STEP;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$DELAY","$ce04d3a99e08e73b$var$STEP","$ce04d3a99e08e73b$var$AMOUNT","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","value"],"version":3,"file":"03-promises.01886e59.js.map"}